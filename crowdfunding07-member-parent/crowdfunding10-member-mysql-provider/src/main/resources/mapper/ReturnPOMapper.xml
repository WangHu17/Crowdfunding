<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.crowdfunding.mapper.ReturnPOMapper">
  <resultMap id="BaseResultMap" type="com.example.crowdfunding.bean.po.ReturnPO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="support_money" jdbcType="INTEGER" property="supportMoney" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="signal_purchase" jdbcType="INTEGER" property="signalPurchase" />
    <result column="purchase" jdbcType="INTEGER" property="purchase" />
    <result column="freight" jdbcType="INTEGER" property="freight" />
    <result column="invoice" jdbcType="INTEGER" property="invoice" />
    <result column="return_date" jdbcType="INTEGER" property="returnDate" />
    <result column="describe_pic_path" jdbcType="VARCHAR" property="describePicPath" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, project_id, type, support_money, content, count, signal_purchase, purchase, freight, 
    invoice, return_date, describe_pic_path
  </sql>
  <select id="selectByExample" parameterType="com.example.crowdfunding.bean.po.ReturnPOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_return
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_return
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_return
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.crowdfunding.bean.po.ReturnPOExample">
    delete from t_return
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
<!--  插入回报信息-->
  <insert id="insertReturnPOList">
    insert into t_return (project_id,
                          type,
                          support_money,
                          content,
                          count,
                          signal_purchase,
                          purchase,
                          freight,
                          invoice,
                          return_date,
                          describe_pic_path
    )
    values
    <foreach collection="returnPOList" item="returnPO" separator=",">(
        #{projectId},
        #{returnPO.type},
        #{returnPO.supportMoney},
        #{returnPO.content},
        #{returnPO.count},
        #{returnPO.signalPurchase},
        #{returnPO.purchase},
        #{returnPO.freight},
        #{returnPO.invoice},
        #{returnPO.returnDate},
        #{returnPO.describePicPath}
      )</foreach>
  </insert>
  <insert id="insert" parameterType="com.example.crowdfunding.bean.po.ReturnPO">
    insert into t_return (id, project_id, type, 
      support_money, content, count, 
      signal_purchase, purchase, freight, 
      invoice, return_date, describe_pic_path
      )
    values (#{id,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{supportMoney,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER}, 
      #{signalPurchase,jdbcType=INTEGER}, #{purchase,jdbcType=INTEGER}, #{freight,jdbcType=INTEGER}, 
      #{invoice,jdbcType=INTEGER}, #{returnDate,jdbcType=INTEGER}, #{describePicPath,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.crowdfunding.bean.po.ReturnPO">
    insert into t_return
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="supportMoney != null">
        support_money,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="signalPurchase != null">
        signal_purchase,
      </if>
      <if test="purchase != null">
        purchase,
      </if>
      <if test="freight != null">
        freight,
      </if>
      <if test="invoice != null">
        invoice,
      </if>
      <if test="returnDate != null">
        return_date,
      </if>
      <if test="describePicPath != null">
        describe_pic_path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="supportMoney != null">
        #{supportMoney,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="signalPurchase != null">
        #{signalPurchase,jdbcType=INTEGER},
      </if>
      <if test="purchase != null">
        #{purchase,jdbcType=INTEGER},
      </if>
      <if test="freight != null">
        #{freight,jdbcType=INTEGER},
      </if>
      <if test="invoice != null">
        #{invoice,jdbcType=INTEGER},
      </if>
      <if test="returnDate != null">
        #{returnDate,jdbcType=INTEGER},
      </if>
      <if test="describePicPath != null">
        #{describePicPath,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.crowdfunding.bean.po.ReturnPOExample" resultType="java.lang.Long">
    select count(*) from t_return
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_return
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.supportMoney != null">
        support_money = #{record.supportMoney,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.signalPurchase != null">
        signal_purchase = #{record.signalPurchase,jdbcType=INTEGER},
      </if>
      <if test="record.purchase != null">
        purchase = #{record.purchase,jdbcType=INTEGER},
      </if>
      <if test="record.freight != null">
        freight = #{record.freight,jdbcType=INTEGER},
      </if>
      <if test="record.invoice != null">
        invoice = #{record.invoice,jdbcType=INTEGER},
      </if>
      <if test="record.returnDate != null">
        return_date = #{record.returnDate,jdbcType=INTEGER},
      </if>
      <if test="record.describePicPath != null">
        describe_pic_path = #{record.describePicPath,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_return
    set id = #{record.id,jdbcType=INTEGER},
      project_id = #{record.projectId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      support_money = #{record.supportMoney,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      count = #{record.count,jdbcType=INTEGER},
      signal_purchase = #{record.signalPurchase,jdbcType=INTEGER},
      purchase = #{record.purchase,jdbcType=INTEGER},
      freight = #{record.freight,jdbcType=INTEGER},
      invoice = #{record.invoice,jdbcType=INTEGER},
      return_date = #{record.returnDate,jdbcType=INTEGER},
      describe_pic_path = #{record.describePicPath,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.crowdfunding.bean.po.ReturnPO">
    update t_return
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="supportMoney != null">
        support_money = #{supportMoney,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="signalPurchase != null">
        signal_purchase = #{signalPurchase,jdbcType=INTEGER},
      </if>
      <if test="purchase != null">
        purchase = #{purchase,jdbcType=INTEGER},
      </if>
      <if test="freight != null">
        freight = #{freight,jdbcType=INTEGER},
      </if>
      <if test="invoice != null">
        invoice = #{invoice,jdbcType=INTEGER},
      </if>
      <if test="returnDate != null">
        return_date = #{returnDate,jdbcType=INTEGER},
      </if>
      <if test="describePicPath != null">
        describe_pic_path = #{describePicPath,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.crowdfunding.bean.po.ReturnPO">
    update t_return
    set project_id = #{projectId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      support_money = #{supportMoney,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER},
      signal_purchase = #{signalPurchase,jdbcType=INTEGER},
      purchase = #{purchase,jdbcType=INTEGER},
      freight = #{freight,jdbcType=INTEGER},
      invoice = #{invoice,jdbcType=INTEGER},
      return_date = #{returnDate,jdbcType=INTEGER},
      describe_pic_path = #{describePicPath,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>